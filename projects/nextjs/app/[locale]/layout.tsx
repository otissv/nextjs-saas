import * as React from 'react'
import { Inter } from 'next/font/google'
import { getServerSession } from 'next-auth'
import { Provider as BalancerProvider } from 'react-wrap-balancer'

import '@/app/[locale]/global.css'
import { PageParams } from '@/types'
import { TranslationProvider } from '@/components/translate/translations-provider'
import { Toaster } from '@/components/toaster'
import { ThemeProvider } from '@/components/theme-provider'
import { cn } from '@/lib/utils'
import { Indicators } from '@/components/indicators/indicator'
import { serverContext } from '@/features/context-server-only'
import { authOptions } from '@/features/app-auth/auth.options'
import { AuthSession } from '@/features/app-auth/auth.types'

const inter = Inter({ subsets: ['latin'], variable: '--font-sans' })

export const metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
}

export interface RootLayoutProps {
  children: React.ReactNode
  params: PageParams
}

export default async function RootLayout({
  children,
  params,
}: RootLayoutProps) {
  const session: AuthSession = await getServerSession(authOptions)
  const isLoggedIn = Boolean(session?.user?.tenantId)

  serverContext().localeService.set(params.locale)

  return (
    <html lang={params.locale} suppressHydrationWarning>
      <TranslationProvider locale={params.locale}>
        <body
          className={cn(
            inter.className,
            inter.variable,
            'w-full min-h-screen bg-background font-sans antialiased gd-cols-[3] translate3d-[2]'
          )}
        >
          <ThemeProvider attribute="class" defaultTheme="system" enableSystem>
            <BalancerProvider>
              {children}
              <Toaster />
              <Indicators isLoggedIn={isLoggedIn} />
            </BalancerProvider>
          </ThemeProvider>
        </body>
      </TranslationProvider>
    </html>
  )
}
