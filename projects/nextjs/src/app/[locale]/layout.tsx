import * as React from 'react'
import { Inter } from 'next/font/google'
import { getServerSession } from 'next-auth'
import { Provider as BalancerProvider } from 'react-wrap-balancer'

import '@/app/[locale]/global.css'
import { PageParams } from '@/types'
import { menu } from './menu'
import { TranslationProvider } from '@/components/translate/translations-provider'
import { Toaster } from '@/components/toaster'
import { ThemeProvider } from '@/components/theme-provider'
import { TailwindIndicator } from '@/components/ui/tailwind-indicator'
import { NavMenuLink } from '@/components/nav/nav'
import { cn } from '@/lib/utils'
import { NavSheet } from '@/components/nav/nav-sheet'
import { Maybe } from '@/components/maybe'
import { getHeaders } from '@/lib/getHeaders'
import { SheetClose } from '@/components/ui/sheet'
import { NavBar } from '@/components/nav/nav-bar'
const inter = Inter({ subsets: ['latin'] })

export const metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
}

export interface RootLayoutProps {
  children: React.ReactNode
  params: PageParams
}

export default async function RootLayout({
  children,
  params,
}: RootLayoutProps) {
  /* TODO: if local not exist redirect to default.
   * Can't use useLocal from next-inlt.
   * May read files in translation folder
   */

  const menuItems = await menu()
  const { pathname } = getHeaders()
  const hideMenu = ['/login', '/admin'].includes(`/${pathname.split('/')[1]}`)

  const session = getServerSession()
  const isLoggedIn = Boolean(session)

  return (
    <html lang={params.locale} suppressHydrationWarning className="dark">
      <body
        className={cn(
          inter.className,
          'w-full min-h-screen bg-background font-sans antialiased'
        )}
      >
        <TranslationProvider locale={params.locale}>
          <ThemeProvider attribute="class" defaultTheme="system" enableSystem>
            <BalancerProvider>
              <div className="flex flex-col">
                <Maybe check={!hideMenu}>
                  {/* mobile nav */}
                  <NavSheet items={menuItems.marketing} position="left">
                    <SheetClose asChild className="justify-start">
                      <NavMenuLink
                        href="/login"
                        data-radix-collection-item
                        className="!m-0 font-semibold w-full rounded-md border border-white focus:outline-none focus:bg-accent focus:text-accent-foreground disabled:opacity-50 disabled:pointer-events-none bg-background hover:bg-accent hover:text-accent-foreground data-[state=open]:bg-accent/50 data-[active]:bg-accent/50 h-10"
                      >
                        Login
                      </NavMenuLink>
                    </SheetClose>
                  </NavSheet>

                  {/* desktop nav */}
                  <NavBar isLoggedIn={isLoggedIn} items={menuItems.marketing} />
                </Maybe>
                {children}
              </div>
              <Toaster />
              <TailwindIndicator />
            </BalancerProvider>
          </ThemeProvider>
        </TranslationProvider>
      </body>
    </html>
  )
}
