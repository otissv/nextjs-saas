import * as React from 'react'
import { Inter } from 'next/font/google'
import { notFound } from 'next/navigation'

import '@/app/[locale]/global.css'
import { PageParams } from '@/types'
import { MenuItem, menu } from './menu'
import { useLocale } from '@/hooks/useLocale'
import { TranslationProvider } from '@/components/translations-provider'
import { Toaster } from '@/components/toaster'
import { ThemeProvider } from '@/components/theme-provider'
import { TailwindIndicator } from '@/components/ui/tailwind-indicator'
import {
  Nav,
  NavMenuList,
  NavMenuItem,
  NavMenuLink,
  NavProps,
} from '@/components/nav'
import { cn } from '@/lib/utils'
import { NavSheet } from '@/components/nav-sheet'
import { Maybe } from '@/components/maybe'
import { getHeaders } from '@/lib/getHeaders'
import { SheetClose } from '@/components/ui/sheet'

const inter = Inter({ subsets: ['latin'] })

export const metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
}

export interface RootLayoutProps {
  children: React.ReactNode
  params: PageParams
}

export default async function RootLayout({
  children,
  params,
}: RootLayoutProps) {
  const locale = useLocale(params)

  // Show a 404 error if the user requests an unknown locale
  if (params.locale !== locale) {
    notFound()
  }

  const menuItems = await menu()
  const { pathname } = getHeaders()
  const hideMenu = ['/login', '/admin'].includes(`/${pathname.split('/')[1]}`)

  return (
    <html lang={locale} suppressHydrationWarning className="dark">
      <body
        className={cn(
          inter.className,
          'w-full min-h-screen bg-background font-sans antialiased'
        )}
      >
        <TranslationProvider locale={locale}>
          <ThemeProvider attribute="class" defaultTheme="system" enableSystem>
            <div className="flex flex-col">
              <Maybe check={!hideMenu}>
                {/* mobile nav */}
                <NavSheet items={menuItems.loggedOut} position="left">
                  <SheetClose asChild className="justify-start">
                    <NavMenuLink
                      href="/login"
                      data-radix-collection-item
                      className="!m-0 font-semibold w-full rounded-md border border-white focus:outline-none focus:bg-accent focus:text-accent-foreground disabled:opacity-50 disabled:pointer-events-none bg-background hover:bg-accent hover:text-accent-foreground data-[state=open]:bg-accent/50 data-[active]:bg-accent/50 h-10"
                    >
                      Login
                    </NavMenuLink>
                  </SheetClose>
                </NavSheet>
                {/* desktop nav */}
                <LoggedOutNav items={menuItems.loggedOut} />
              </Maybe>
              {children}
            </div>
            <Toaster />
            <TailwindIndicator />
          </ThemeProvider>
        </TranslationProvider>
      </body>
    </html>
  )
}

export interface LoggedOutNavProps extends NavProps {
  items: MenuItem[]
  className?: string
}

const LoggedOutNav = ({ className, items, ...props }: LoggedOutNavProps) => {
  return (
    <div>
      <Nav
        {...props}
        className={cn('mx-6 my-2 lg:m-0 hidden lg:!block', className)}
      >
        <NavMenuList className="justify-start">
          {items.map(({ id, label, href }) => {
            return (
              <NavMenuItem key={id} className="mx-2 my-2 xl:first:m-0">
                <NavMenuLink
                  href={href}
                  data-radix-collection-item
                  className={`
                    !m-0
                    w-full 
                    h-10
                    font-semibold 
                    rounded-md 
                    justify-center
                    focus:outline-none 
                    focus:bg-accent 
                    focus:text-accent-foreground 
                    disabled:opacity-50 
                    disabled:pointer-events-none 
                    bg-background hover:bg-accent 
                    hover:text-accent-foreground 
                    data-[state=open]:bg-accent/50 
                    data-[active]:bg-accent/50 
                    `}
                >
                  {label}
                </NavMenuLink>
              </NavMenuItem>
            )
          })}
          <NavMenuItem className="!mx-2 !ml-auto xl:last:!mr-0">
            <NavMenuLink
              href="/login"
              data-radix-collection-item
              className="!m-0 font-semibold w-full rounded-md border border-white focus:outline-none focus:bg-accent focus:text-accent-foreground disabled:opacity-50 disabled:pointer-events-none bg-background hover:bg-accent hover:text-accent-foreground data-[state=open]:bg-accent/50 data-[active]:bg-accent/50 h-10"
            >
              Login
            </NavMenuLink>
          </NavMenuItem>
        </NavMenuList>
      </Nav>
    </div>
  )
}
LoggedOutNav.displayName = 'LoggedOutNav'
